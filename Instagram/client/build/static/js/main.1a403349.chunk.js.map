{"version":3,"sources":["components/Navbar.js","components/screens/Home.js","components/screens/Login.js","components/screens/Profile.js","components/screens/Signup.js","components/screens/CreatePost.js","reducer/userReducer.js","components/screens/UserProfile.js","components/screens/SubscribesUserPosts.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","useContext","UserContext","state","dispatch","history","useHistory","className","to","id","onClick","localStorage","clear","type","push","Home","useState","data","setData","useEffect","fetch","headers","getItem","then","res","json","result","console","log","posts","map","item","key","_id","style","padding","postedBy","name","float","postid","method","Authorization","newData","filter","src","photo","likes","includes","body","JSON","stringify","postId","catch","err","length","title","comments","record","fontWeight","text","onSubmit","e","preventDefault","target","value","placeholder","Login","password","setPassword","email","setEmail","onChange","test","error","M","toast","html","classes","setItem","token","user","payload","Profile","mypics","setPics","image","setImage","mypost","FormData","append","pic","url","maxWidth","margin","borderBottom","display","justifyContent","width","height","borderRadius","followers","following","file","files","alt","Signup","setName","undefined","setUrl","uploadFields","message","PostData","uploadPic","CreatePost","setTitle","setBody","textAlign","postDetails","reducer","action","userProfile","setProfile","userid","useParams","showfollow","setShowFollow","followId","prevState","unfollowId","newFollower","color","createContext","Routing","parse","exact","path","UserProfile","App","useReducer","Provider","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1a403349.chunk.js","sourcesContent":["import React,{useContext} from 'react'\r\nimport { Link , useHistory} from 'react-router-dom'\r\nimport {UserContext} from '../App'\r\nconst NavBar = () =>{\r\n  const {state,dispatch} =useContext(UserContext)\r\n  const history = useHistory()\r\n  const renderList = () =>{\r\n    if(state){\r\n      return [ \r\n      <li><Link to=\"/profile\">Profile</Link></li>,\r\n        <li><Link to=\"/create\">Create</Link></li>, \r\n        <li><Link to=\"/myfollowingpost\">Explore</Link></li>, \r\n        <li>\r\n           <button className=\"btn #64b5f6 red lighten-2\" \r\n            onClick={()=>{\r\n              localStorage.clear()\r\n              dispatch({type:\"CLEAR\"})\r\n              history.push('/login')\r\n            }}>\r\n                Logout \r\n            </button>\r\n        </li> \r\n        ]\r\n    }else{\r\n      return [\r\n        <li><Link to=\"/login\">Login</Link></li>,\r\n        <li><Link to=\"/signup\">Signup</Link></li>\r\n\r\n      ]\r\n\r\n    }\r\n  }\r\n return(\r\n<nav>\r\n    <div className=\"nav-wrapper white\">\r\n      <Link to={state?\"/\":\"/login\"} className=\"brand-logo left\">Instagram</Link>\r\n      <ul id=\"nav-mobile\" className=\"right\">\r\n       {renderList()}\r\n      </ul>\r\n    </div>\r\n  </nav>    \r\n )}\r\n\r\nexport default NavBar ","import React,{useState,useEffect,useContext} from 'react'\r\n\r\nimport {UserContext} from '../../App'\r\n// import { post } from '../server side/routes/post'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst Home = () =>{\r\n    const [data,setData] = useState([])\r\n    const {state,dispatch} = useContext(UserContext)\r\n    useEffect(()=>{\r\n        fetch('/allpost',{\r\n            headers:{\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            } \r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            console.log(result)\r\n            setData(result.posts)\r\n        })\r\n    },[])\r\n\r\n    const likePost = (id) =>{\r\n        fetch('/like',{\r\n            method:\"put\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            },\r\n            body:JSON.stringify({\r\n                postId:id\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            console.log(result)\r\n            const newData = data.map(item=>{\r\n                if(item._id==result._id){\r\n                    return result\r\n                }else{\r\n                    return item\r\n                }\r\n            })\r\n            setData(newData)\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n    const unlikePost = (id) =>{\r\n        fetch('/unlike',{\r\n            method:\"put\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            },\r\n            body:JSON.stringify({\r\n                postId:id\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n           // console.log(result)\r\n           const newData =data.map(item=>{\r\n               if(item._id==result._id){\r\n                   return result\r\n               }else{\r\n                   return item\r\n               }\r\n           })\r\n           setData(newData)\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    const makeComment = (text,postId)=>{\r\n        fetch('/comment',{\r\n            method:\"put\",\r\n            headers:{\r\n                \"Content-type\":\"application/json\",\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\") \r\n            },\r\n            body:JSON.stringify({\r\n                postId,\r\n                text\r\n            })\r\n            \r\n        }).then(res=>res.json())\r\n        .then(result =>{\r\n            console.log(result)\r\n            const newData =data.map(item=>{\r\n                if(item._id==result._id){\r\n                    return result\r\n                }else{\r\n                    return item\r\n                }\r\n            }) \r\n             setData(newData)\r\n\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n    const deletePost = (postid)=>{\r\n        fetch(`/deletepost/${postid}`,{\r\n            method:\"delete\",\r\n            headers:{\r\n                Authorization:\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            console.log(result)\r\n            const newData = data.filter(item=>{\r\n                return item._id !== result._id\r\n            })\r\n            setData(newData)\r\n        })\r\n    }\r\n    return(\r\n        <div className=\"home\">\r\n            {\r\n                data.map(item=>{\r\n                    return(\r\n                     <div className=\"card home-card\" key={item._id}>\r\n                        <h5 style= {{padding:\"5px\"}}><Link to={item.postedBy._id !== state._id ? \"/profile/\"+item.postedBy._id:\"/profile/\"}>{item.postedBy.name}</Link>{item.postedBy._id == state._id \r\n                        &&<i className=\"material-icons\" style={{\r\n                            float:\"right\"\r\n                        }}  \r\n                        onClick={()=>deletePost(item._id)}\r\n                        >delete</i>\r\n                        }</h5>\r\n                        <div className=\"card-image\">\r\n                            <img src={item.photo}/>\r\n                        </div>\r\n                        <div className=\"card-content\"> \r\n                        <i className=\"material-icons\">favorite</i>\r\n                        {item.likes.includes(state._id)\r\n                        ?  \r\n                        <i className=\"material-icons\"                         \r\n                            onClick={()=>{unlikePost(item._id)}}\r\n                            >sentiment_very_dissatisfied</i>\r\n                        : \r\n                            <i className=\"material-icons\"\r\n                            onClick={()=>{likePost(item._id)}}\r\n                            >sentiment_very_satisfied</i>\r\n                        }\r\n                       \r\n                        \r\n\r\n                                <h6>{item.likes.length} likes </h6>\r\n                                <h6>{item.title}</h6>\r\n                                <p>{item.body}</p>\r\n                                {\r\n                                    item.comments.map(record=>{\r\n                                        return (\r\n                                        <h6 key={record._id}><span style={{fontWeight:\"500\"}}>{record.postedBy.name}</span>{record.text}</h6>\r\n                                        )\r\n                                    })\r\n                                }\r\n                                <form onSubmit={(e)=>{\r\n                                    e.preventDefault()\r\n                                    makeComment(e.target[0].value,item._id)\r\n                                }}>\r\n                                 <input type=\"text\" placeholder=\"add a comment\"/>\r\n\r\n                                </form>\r\n                        </div>   \r\n                    </div>\r\n                    )\r\n                })\r\n            }\r\n            \r\n\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home","import React,{useState,useContext} from 'react'\r\nimport { Link, useHistory} from 'react-router-dom'\r\nimport {UserContext} from '../../App'\r\nimport M from 'materialize-css'\r\n\r\nconst Login = () =>{\r\n    const {state,dispatch} = useContext(UserContext)\r\n    const history = useHistory()\r\n    const[password,setPassword]= useState(\"\")\r\n    const[email,setEmail]= useState(\"\")\r\n    const PostData =()=>{\r\n        if(!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)){\r\n               M.toast({html: \"Invalid email\",classes:\"#c62828 red darken-3\"})\r\n            return\r\n        }\r\n\r\n        fetch(\"/login\",{\r\n            method:\"post\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\"\r\n            },\r\n            body:JSON.stringify({\r\n                password,\r\n                email\r\n\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(data =>{\r\n            console.log(data)\r\n            if(data.error){\r\n                M.toast({html: data.error,classes:\"#c62828 red darken-3\"})\r\n\r\n            }else{\r\n                localStorage.setItem(\"jwt\",data.token)\r\n                localStorage.setItem(\"user\",JSON.stringify(data.user))\r\n                dispatch({type:\"USER\",payload:data.user})\r\n                M.toast({html: \"Signed in\",classes:\"#43a047 green darken-1\"})\r\n               history.push('/')//home screen if successful\r\n            }\r\n\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n   \r\n    }\r\n    return(\r\n       <div className=\"mycard\">\r\n           <div className=\"car auth-card\">\r\n            <h2>\r\n                Instagram\r\n            </h2>\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"email\"\r\n                value={email}\r\n                onChange={(e)=> setEmail(e.target.value)}\r\n            />\r\n            <input\r\n                type=\"password\"\r\n                placeholder=\"password\"\r\n                value={password}\r\n                onChange={(e)=> setPassword(e.target.value)}\r\n            />\r\n            <button className=\"btn waves-effect waves-light #64b5f6 blue lighten-2\" \r\n            onClick={()=>PostData()}>\r\n                Login\r\n            </button>\r\n            <h5>\r\n                <Link to ='/signup'>Dont have an account?</Link>\r\n            </h5>\r\n            </div>\r\n       </div>\r\n    )\r\n}\r\n\r\nexport default Login","import React,{useEffect,useState,useContext} from 'react'\r\nimport {UserContext} from '../../App'\r\n\r\n\r\nconst Profile = () =>{\r\n    const [mypics,setPics] = useState([])\r\n    const {state,dispatch} = useContext(UserContext)\r\n    const[image,setImage] = useState(\"\")\r\n    useEffect(()=>{\r\n        fetch('/mypost',{\r\n            headers:{\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            console.log(result)\r\n            setPics(result.mypost)\r\n        })\r\n     },[])\r\n\r\n     useEffect(()=>{\r\n         if(image){\r\n            const data = new FormData() //in order to upload file\r\n            data.append(\"file\",image)\r\n            data.append(\"upload_preset\",\"instagram\")\r\n            data.append(\"cloud_name\",\"caronj\")\r\n            fetch(\"\thttps://api.cloudinary.com/v1_1/caronj/image/upload\", {\r\n                method:\"post\",  \r\n                body:data\r\n            })\r\n            .then(res=>res.json())\r\n            .then(data=>{\r\n                \r\n                fetch('/updatepic',{\r\n                    method:\"put\",\r\n                    headers:{\r\n                        \"Content-Type\":\"application/json\",\r\n                        \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n                    },\r\n                    body:JSON.stringify({\r\n                        pic:data.url\r\n                    })\r\n                    \r\n                }).then(res=>res.json())\r\n                .then(result=>{\r\n                    console.log(result)\r\n               localStorage.setItem(\"user\",JSON.stringify({...state,pic:data.pic}))\r\n               dispatch({type:\"UPDATEPIC\",payload:result.pic})\r\n\r\n                })\r\n                })\r\n            .catch(err=>{\r\n                console.log(err)  \r\n            })\r\n         }\r\n     },[image])\r\n\r\n     const updatePhoto = (file) => {\r\n         setImage(file)\r\n        \r\n    }\r\n    return(\r\n        <div style={{maxWidth:\"550px\",margin:\"0px auto\"}}>\r\n        <div style={{\r\n                margin:\"18px 0px \",\r\n                borderBottom:\"1px solid grey\"\r\n                }}>\r\n        \r\n            <div style={{\r\n                display:\"flex\",\r\n                justifyContent:\"space-around\"\r\n            }}>\r\n                <div>                  \r\n                    <img style={{width:\"160px\",height:\"160px\",borderRadius:\"80px\"}}\r\n                      src={state?state.pic:\"loading\"}\r\n                    />   \r\n                </div>\r\n                <div>\r\n                   <h4>{state?state.name:\"loading\"}</h4> \r\n                   <h5>{state?state.email:\"loading\"}</h5> \r\n                   <div style={{display:\"flex\", justifyContent:\"space-between\", width:\"108%\"}}>\r\n                        <h6>{mypics.length} posts</h6>\r\n                        <h6>{state?state.followers.length:\"0\"} followers</h6>\r\n                       <h6>{state?state.following.length:\"0\"} following</h6>\r\n                   </div>\r\n                </div> \r\n              \r\n            <div className=\"file-field input-field\" style={{margin:\"10px \"}}>\r\n                        <div className=\"btn #64b5f6 blue lighten-2\">\r\n                            <span>Update Profile Pic</span>\r\n                            <input type=\"file\" onChange={(e)=> updatePhoto(e.target.files[0])}\r\n                            />\r\n                    </div>\r\n                    <div className=\"file-path-wrapper\">\r\n                    <input className=\"file-path validate\" type=\"text\"/>\r\n                    </div>\r\n                </div> \r\n                </div>\r\n               \r\n            </div>\r\n            <div className=\"gallery\">\r\n               {\r\n                   mypics.map(item=>{\r\n                       return(\r\n                        <img key={item._id} className=\"item\" src={item.photo} alt={item.title}/>  \r\n                       )\r\n                   })\r\n               }\r\n\r\n           \r\n           </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile","import React,{useState,useEffect} from 'react'\r\nimport { Link, useHistory} from 'react-router-dom'\r\nimport M from 'materialize-css'\r\n\r\nconst Signup = () =>{\r\n    const history= useHistory()\r\n    const[name,setName]= useState(\"\")\r\n    const[password,setPassword]= useState(\"\")\r\n    const[email,setEmail]= useState(\"\")\r\n    const[image,setImage] = useState(\"\")\r\n    const[url,setUrl] = useState(undefined)\r\n\r\n    useEffect(() => {\r\n        if(url) {\r\n            uploadFields()\r\n        }\r\n        \r\n    }, [url])\r\n    //uploading a pic will be optional \r\n    const uploadPic =() =>{\r\n        const data = new FormData() //in order to upload file\r\n        data.append(\"file\",image)\r\n        data.append(\"upload_preset\",\"instagram\")\r\n        data.append(\"cloud_name\",\"caronj\")\r\n        fetch(\"\thttps://api.cloudinary.com/v1_1/caronj/image/upload\", {\r\n            method:\"post\",\r\n            body:data\r\n        })\r\n        .then(res=>res.json())\r\n        .then(data=>{\r\n            setUrl(data.url)\r\n            })\r\n        .catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n    const uploadFields=() =>{\r\n        if(!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)){\r\n            M.toast({html: \"Invalid email\",classes:\"#c62828 red darken-3\"})\r\n         return\r\n     }\r\n\r\n     fetch(\"/signup\",{\r\n         method:\"post\",\r\n         headers:{\r\n             \"Content-Type\":\"application/json\"\r\n         },\r\n         body:JSON.stringify({\r\n             name,\r\n             password,\r\n             email,\r\n             pic:url\r\n\r\n         })\r\n     }).then(res=>res.json())\r\n     .then(data =>{\r\n         if(data.error){\r\n             M.toast({html: data.error,classes:\"#c62828 red darken-3\"})\r\n\r\n         }else{\r\n             M.toast({html: data.message,classes:\"#43a047 green darken-1\"})\r\n            history.push('/login')\r\n         }\r\n\r\n     }).catch(err=>{\r\n         console.log(err)\r\n     })\r\n\r\n    }\r\n    //if user doesnt upload an image, only the fields that were required will be posted\r\n    const PostData =()=>{\r\n        if(image){\r\n            uploadPic()\r\n        }else{\r\n                uploadFields()\r\n        }\r\n        \r\n   \r\n    }\r\n    return(\r\n       <div className=\"mycard\">\r\n           <div className=\"car auth-card\">\r\n            <h2>\r\n                Instagram\r\n            </h2>\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"name\"\r\n                value={name}\r\n                onChange={(e)=> setName(e.target.value)}\r\n            />\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"email\"\r\n                value={email}\r\n                onChange={(e)=> setEmail(e.target.value)}\r\n            />\r\n            <input\r\n                type=\"password\"\r\n                placeholder=\"password\"\r\n                value={password}\r\n                onChange={(e)=> setPassword(e.target.value)}\r\n            />\r\n              <div className=\"file-field input-field\">\r\n                        <div className=\"btn #64b5f6 blue lighten-2\">\r\n                            <span>Upload Pic</span>\r\n                            <input type=\"file\" onChange={(e)=> setImage(e.target.files[0])}\r\n                            />\r\n                    </div>\r\n                    <div className=\"file-path-wrapper\">\r\n                    <input className=\"file-path validate\" type=\"text\"/>\r\n                    </div>\r\n                </div>\r\n            <button className=\"btn waves-effect waves-light #64b5f6 blue lighten-2\"  \r\n            onClick={()=>PostData()}>\r\n                Sign up \r\n            </button>\r\n\r\n            <h5>\r\n                <Link to ='/login'>Already have an account?</Link>\r\n            </h5>\r\n            </div>\r\n       </div>\r\n    )\r\n}\r\n\r\nexport default Signup","import React, {useState,useEffect} from 'react'\r\nimport M from 'materialize-css'\r\nimport {useHistory} from 'react-router-dom'\r\n \r\n\r\nconst CreatePost = () =>{\r\n    const history = useHistory()\r\n    const[title,setTitle] = useState(\"\")\r\n    const[body,setBody] = useState(\"\")\r\n    const[image,setImage] = useState(\"\")\r\n    const[url,setUrl] = useState(\"\")\r\n    useEffect(()=>{\r\n        if(url){\r\n        fetch(\"/createpost\",{\r\n            method:\"post\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"Authorization\":\"Bearer \" +localStorage.getItem(\"jwt\")\r\n            },\r\n            body:JSON.stringify({\r\n                title,\r\n                body,\r\n                pic:url\r\n\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(data =>{\r\n            console.log(data)\r\n            if(data.error){\r\n                M.toast({html: data.error,classes:\"#c62828 red darken-3\"})\r\n\r\n            }else{\r\n                M.toast({html: \"Create new post\",classes:\"#43a047 green darken-1\"})\r\n               history.push('/')//home screen if successful\r\n            }\r\n\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }},[url])\r\n    const postDetails = () =>{\r\n        const data = new FormData() //in order to upload file\r\n        data.append(\"file\",image)\r\n        data.append(\"upload_preset\",\"instagram\")\r\n        data.append(\"cloud_name\",\"caronj\")\r\n        fetch(\"\thttps://api.cloudinary.com/v1_1/caronj/image/upload\", {\r\n            method:\"post\",\r\n            body:data\r\n        })\r\n        .then(res=>res.json())\r\n        .then(data=>{\r\n            setUrl(data.url)\r\n            })\r\n        .catch(err=>{\r\n            console.log(err)\r\n        })\r\n        \r\n    }\r\n        return(\r\n            <div className=\"card input-filed\"\r\n            style={{\r\n                margin:\"20px auto\",\r\n                maxWidth:\"500px\",\r\n                padding:\"20px\",\r\n                textAlign:\"center\"\r\n            }}>\r\n                <input type=\"text\" \r\n                placeholder=\"title\"\r\n                value={title}\r\n                onChange={(e)=>setTitle(e.target.value)}\r\n                />\r\n                <input type=\"text\" \r\n                placeholder=\"body\"\r\n                value={body}\r\n                 onChange={(e)=>setBody(e.target.value)}\r\n                />\r\n                <div className=\"file-field input-field\">\r\n                        <div className=\"btn #64b5f6 blue lighten-2\">\r\n                            <span>Upload Image</span>\r\n                            <input type=\"file\" onChange={(e)=> setImage(e.target.files[0])}\r\n                            />\r\n                    </div>\r\n                    <div className=\"file-path-wrapper\">\r\n                    <input className=\"file-path validate\" type=\"text\"/>\r\n                    </div>\r\n                </div>\r\n                <button className=\"btn waves-effect waves-light #64b5f6 blue darken-2\" \r\n                onClick={()=>postDetails()}>\r\n                \r\n                Submit Post\r\n            </button>\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default CreatePost","export const initialState = null\r\n\r\nexport const reducer = (state,action)=>{\r\n    if(action.type==\"USER\"){\r\n        return action.payload\r\n    }\r\n    if(action.type==\"CLEAR\"){\r\n        return null\r\n    }\r\n    if(action.type==\"UPDATE\"){\r\n        return {\r\n            ...state,\r\n            followers:action.payload.followers,\r\n            following:action.payload.following\r\n        }\r\n    }\r\n    if(action.type==\"UPDATEPIC\"){\r\n        return {\r\n            ...state,\r\n            pic:action.payload\r\n        }\r\n    }\r\n    return state\r\n} ","import React,{useEffect,useState,useContext} from 'react'\r\nimport {UserContext} from '../../App'\r\nimport {useParams} from 'react-router-dom'\r\n\r\n\r\nconst Profile = () =>{\r\n    const [userProfile,setProfile] = useState(null)\r\n    const {state,dispatch} = useContext(UserContext)\r\n    const {userid} = useParams()\r\n    const [showfollow,setShowFollow] = useState(state?!state.following.includes(userid):true)\r\n\r\n\r\n    useEffect(()=>{\r\n        fetch(`/user/${userid}`,{\r\n            headers:{ \r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            setProfile(result)\r\n        })\r\n     },[])\r\n     const followUser = () =>{\r\n         fetch('/follow',{\r\n             method:\"put\",\r\n             headers:{\r\n                 \"Content-Type\":\"application/json\",\r\n                 \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\") \r\n             },\r\n             body:JSON.stringify({\r\n                 followId:userid\r\n             })\r\n         }).then(res=>res.json())\r\n         .then(data=>{ \r\n             dispatch({type:\"UPDATE\",payload:{following:data.following,followers:data.followers}})\r\n            localStorage.setItem(\"user\",JSON.stringify(data))\r\n            setProfile((prevState)=>{ \r\n                return {\r\n                    ...prevState,\r\n                    user:{\r\n                        ...prevState.user,\r\n                        followers:[...prevState.user.followers,data._id]\r\n                    }\r\n                }\r\n            })\r\n            setShowFollow(false)\r\n\r\n         })\r\n             \r\n     }\r\n     const unfollowUser = () =>{\r\n        fetch('/unfollow',{\r\n            method:\"put\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\") \r\n            },\r\n            body:JSON.stringify({\r\n                unfollowId:userid\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(data=>{ \r\n            dispatch({type:\"UPDATE\",payload:{following:data.following,followers:data.followers}})\r\n           localStorage.setItem(\"user\",JSON.stringify(data))\r\n           \r\n           setProfile((prevState)=>{ \r\n               const newFollower = prevState.user.followers.filter (item=> item != data._id)\r\n               return {\r\n                   ...prevState,\r\n                   user:{\r\n                       ...prevState.user,\r\n                       followers:newFollower \r\n               }}\r\n           })\r\n           setShowFollow(true)\r\n        })\r\n            \r\n    }\r\n    \r\n    return(\r\n        <>\r\n        {userProfile ? \r\n         <div style={{maxWidth:\"550px\",margin:\"0px auto\"}}>\r\n            <div style={{\r\n                display:\"flex\",\r\n                justifyContent:\"space-around\",\r\n                margin:\"18px 0px \",\r\n                borderBottom:\"1px solid grey\"\r\n            }}>\r\n                <div>                  \r\n                    <img style={{width:\"160px\",height:\"160px\",borderRadius:\"80px\"}}\r\n                      src={userProfile.user.pic}\r\n                    />\r\n                </div>\r\n                <div>\r\n                   <h4>{userProfile.user.name}</h4> \r\n                   <h5>{userProfile.user.email}</h5> \r\n                   <div style={{display:\"flex\", justifyContent:\"space-between\", width:\"108%\"}}>\r\n                        <h6>{userProfile.posts.length} posts</h6>\r\n                        <h6>{userProfile.user.followers.length} Followers</h6>\r\n                        <h6>{userProfile.user.following.length} following</h6>\r\n                   </div> \r\n                   {showfollow?\r\n                   <button className=\"btn waves-effect waves-light #64b5f6 blue lighten-2\" \r\n                    onClick={()=>followUser()}>\r\n                        Follow\r\n                    </button>\r\n                   :\r\n                    <button className=\"btn waves-effect waves-light #64b5f6 blue lighten-2\" \r\n                    onClick={()=>unfollowUser()}>\r\n                        Unfollow\r\n                    </button>\r\n                   }\r\n                   \r\n                  \r\n                </div>\r\n            </div>\r\n            <div className=\"gallery\">\r\n               {\r\n                   userProfile.posts.map(item=>{\r\n                       return(\r\n                        <img key={item._id} className=\"item\" src={item.photo} alt={item.title}/>  \r\n                       )\r\n                   })\r\n               }\r\n\r\n           \r\n           </div>\r\n            \r\n        </div>\r\n        :<h2>Good things come to those who wait </h2>}\r\n       </>\r\n    )\r\n}\r\n\r\nexport default Profile ","import React,{useState,useEffect,useContext} from 'react'\r\nimport {UserContext} from '../../App'\r\nimport {Link} from 'react-router-dom'\r\nconst Home  = ()=>{\r\n    const [data,setData] = useState([])\r\n    const {state,dispatch} = useContext(UserContext)\r\n    useEffect(()=>{\r\n       fetch('/getsubpost',{\r\n           headers:{\r\n               \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n           }\r\n       }).then(res=>res.json())\r\n       .then(result=>{\r\n           console.log(result)\r\n           setData(result.posts)\r\n       })\r\n    },[])\r\n\r\n    const likePost = (id)=>{\r\n          fetch('/like',{\r\n              method:\"put\",\r\n              headers:{\r\n                  \"Content-Type\":\"application/json\",\r\n                  \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n              },\r\n              body:JSON.stringify({\r\n                  postId:id\r\n              })\r\n          }).then(res=>res.json())\r\n          .then(result=>{\r\n                   //   console.log(result)\r\n            const newData = data.map(item=>{\r\n                if(item._id==result._id){\r\n                    return result\r\n                }else{\r\n                    return item\r\n                }\r\n            })\r\n            setData(newData)\r\n          }).catch(err=>{\r\n              console.log(err)\r\n          })\r\n    }\r\n    const unlikePost = (id)=>{\r\n          fetch('/unlike',{\r\n              method:\"put\",\r\n              headers:{\r\n                  \"Content-Type\":\"application/json\",\r\n                  \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n              },\r\n              body:JSON.stringify({\r\n                  postId:id\r\n              })\r\n          }).then(res=>res.json())\r\n          .then(result=>{\r\n            //   console.log(result)\r\n            const newData = data.map(item=>{\r\n                if(item._id==result._id){\r\n                    return result\r\n                }else{\r\n                    return item\r\n                }\r\n            })\r\n            setData(newData)\r\n          }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    const makeComment = (text,postId)=>{\r\n          fetch('/comment',{\r\n              method:\"put\",\r\n              headers:{\r\n                  \"Content-Type\":\"application/json\",\r\n                  \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n              },\r\n              body:JSON.stringify({\r\n                  postId,\r\n                  text\r\n              })\r\n          }).then(res=>res.json())\r\n          .then(result=>{\r\n              console.log(result)\r\n              const newData = data.map(item=>{\r\n                if(item._id==result._id){\r\n                    return result\r\n                }else{\r\n                    return item\r\n                }\r\n             })\r\n            setData(newData)\r\n          }).catch(err=>{\r\n              console.log(err)\r\n          })\r\n    }\r\n\r\n    const deletePost = (postid)=>{\r\n        fetch(`/deletepost/${postid}`,{\r\n            method:\"delete\",\r\n            headers:{\r\n                Authorization:\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            console.log(result)\r\n            const newData = data.filter(item=>{\r\n                return item._id !== result._id\r\n            })\r\n            setData(newData)\r\n        })\r\n    }\r\n   return (\r\n       <div className=\"home\">\r\n           {\r\n               data.map(item=>{\r\n                   return(\r\n                       <div className=\"card home-card\" key={item._id}>\r\n                            <h5 style={{padding:\"5px\"}}><Link to={item.postedBy._id !== state._id?\"/profile/\"+item.postedBy._id :\"/profile\"  }>{item.postedBy.name}</Link> {item.postedBy._id == state._id \r\n                            && <i className=\"material-icons\" style={{\r\n                                float:\"right\"\r\n                            }} \r\n                            onClick={()=>deletePost(item._id)}\r\n                            >delete</i>\r\n\r\n                            }</h5>\r\n                            <div className=\"card-image\">\r\n                                <img src={item.photo}/>\r\n                            </div>\r\n                            <div className=\"card-content\">\r\n                            <i className=\"material-icons\" style={{color:\"red\"}}>favorite</i>\r\n                            {item.likes.includes(state._id)\r\n                            ? \r\n                             <i className=\"material-icons\"\r\n                                    onClick={()=>{unlikePost(item._id)}}\r\n                              >thumb_down</i>\r\n                            : \r\n                            <i className=\"material-icons\"\r\n                            onClick={()=>{likePost(item._id)}}\r\n                            >thumb_up</i>\r\n                            }\r\n                            \r\n                           \r\n                                <h6>{item.likes.length} likes</h6>\r\n                                <h6>{item.title}</h6>\r\n                                <p>{item.body}</p>\r\n                                {\r\n                                    item.comments.map(record=>{\r\n                                        return(\r\n                                        <h6 key={record._id}><span style={{fontWeight:\"500\"}}>{record.postedBy.name}</span> {record.text}</h6>\r\n                                        )\r\n                                    })\r\n                                }\r\n                                <form onSubmit={(e)=>{\r\n                                    e.preventDefault()\r\n                                    makeComment(e.target[0].value,item._id)\r\n                                }}>\r\n                                  <input type=\"text\" placeholder=\"add a comment\" />  \r\n                                </form>\r\n                                \r\n                            </div>\r\n                        </div> \r\n                   )\r\n               })\r\n           }\r\n          \r\n          \r\n       </div>\r\n   )\r\n}\r\n\r\n\r\nexport default Home","import React,{useEffect,createContext,useReducer,useContext} from 'react';\nimport NavBar from './components/Navbar'\nimport './App.css'\nimport {BrowserRouter,Route,Switch,useHistory} from 'react-router-dom'\nimport Home from './components/screens/Home'\nimport Login from './components/screens/Login'\nimport Profile from './components/screens/Profile'\nimport Signup from './components/screens/Signup'\nimport CreatePost from './components/screens/CreatePost'\nimport {reducer,initialState} from './reducer/userReducer'\nimport UserProfile from './components/screens/UserProfile'\nimport SubscribedUserPosts from './components/screens/SubscribesUserPosts'\nexport const UserContext = createContext()\n\n\nconst Routing = () => {\n\n   const history = useHistory()\n   const {state,dispatch} = useContext(UserContext)\n   useEffect(()=> {\n      const user = JSON.parse(localStorage.getItem(\"user\"))\n      console.log(typeof(user),user)\n      if(user){\n         dispatch({type:\"USER\",payload:user})\n      }else{\n         history.push('/login')\n      }\n   },[] )\n   \n   return (\n      <Switch>\n      <Route exact path=\"/\">\n         <Home/>\n         </Route>\n         <Route path=\"/login\">\n         <Login/>\n         </Route>\n         <Route path=\"/signup\">\n            <Signup/>\n         </Route>\n         <Route exact path=\"/profile\">\n            <Profile/>\n         </Route>\n         <Route path=\"/profile/:userid\">\n        <UserProfile />\n      </Route>\n         <Route path=\"/create\">\n            <CreatePost/>\n         </Route>\n         <Route path=\"/myfollowingpost\">\n            <SubscribedUserPosts/>\n         </Route>\n         </Switch>\n   )\n}\nfunction App() {\n   const [state,dispatch] =useReducer(reducer,initialState)\n  return (\n     <UserContext.Provider value={{state,dispatch}}>\n    <BrowserRouter>\n     <NavBar />\n     <Routing />\n    </BrowserRouter>\n </UserContext.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}